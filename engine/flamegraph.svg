<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="1414"><g><title>engine`DYLD-STUB$$free (2 samples, 0.14%)</title><rect x="0.0000%" y="325" width="0.1414%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.07%)</title><rect x="0.4243%" y="309" width="0.0707%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="1"/><text x="0.6743%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.14%)</title><rect x="0.4950%" y="309" width="0.1414%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="2"/><text x="0.7450%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.07%)</title><rect x="0.6365%" y="309" width="0.0707%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="1"/><text x="0.8865%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.07%)</title><rect x="0.6365%" y="293" width="0.0707%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="1"/><text x="0.8865%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.07%)</title><rect x="0.6365%" y="277" width="0.0707%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="1"/><text x="0.8865%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.07%)</title><rect x="0.7072%" y="309" width="0.0707%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="1"/><text x="0.9572%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.07%)</title><rect x="0.7779%" y="293" width="0.0707%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="1"/><text x="1.0279%" y="303.50"></text></g><g><title>engine`engine::moves::precalculate::magic_bitboards::find_bishop_magic_numbers (18 samples, 1.27%)</title><rect x="0.1414%" y="325" width="1.2730%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="18"/><text x="0.3914%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.64%)</title><rect x="0.7779%" y="309" width="0.6365%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="9"/><text x="1.0279%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.57%)</title><rect x="0.8487%" y="293" width="0.5658%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="8"/><text x="1.0987%" y="303.50"></text></g><g><title>engine`__rdl_alloc_zeroed (3 samples, 0.21%)</title><rect x="9.6181%" y="309" width="0.2122%" height="15" fill="rgb(240,193,28)" fg:x="136" fg:w="3"/><text x="9.8681%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.35%)</title><rect x="9.8303%" y="309" width="0.3536%" height="15" fill="rgb(216,20,37)" fg:x="139" fg:w="5"/><text x="10.0803%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (20 samples, 1.41%)</title><rect x="10.1839%" y="309" width="1.4144%" height="15" fill="rgb(206,188,39)" fg:x="144" fg:w="20"/><text x="10.4339%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (2 samples, 0.14%)</title><rect x="11.5983%" y="309" width="0.1414%" height="15" fill="rgb(217,207,13)" fg:x="164" fg:w="2"/><text x="11.8483%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.28%)</title><rect x="11.7397%" y="309" width="0.2829%" height="15" fill="rgb(231,73,38)" fg:x="166" fg:w="4"/><text x="11.9897%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (9 samples, 0.64%)</title><rect x="12.4470%" y="293" width="0.6365%" height="15" fill="rgb(225,20,46)" fg:x="176" fg:w="9"/><text x="12.6970%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.21%)</title><rect x="13.0835%" y="293" width="0.2122%" height="15" fill="rgb(210,31,41)" fg:x="185" fg:w="3"/><text x="13.3335%" y="303.50"></text></g><g><title>libsystem_platform.dylib`__bzero (86 samples, 6.08%)</title><rect x="13.2956%" y="293" width="6.0820%" height="15" fill="rgb(221,200,47)" fg:x="188" fg:w="86"/><text x="13.5456%" y="303.50">libsyste..</text></g><g><title>engine`engine::moves::precalculate::magic_bitboards::find_rook_magic_numbers (560 samples, 39.60%)</title><rect x="1.4144%" y="325" width="39.6040%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="560"/><text x="1.6644%" y="335.50">engine`engine::moves::precalculate::magic_bitboards::find_rook_ma..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (410 samples, 29.00%)</title><rect x="12.0226%" y="309" width="28.9958%" height="15" fill="rgb(249,33,26)" fg:x="170" fg:w="410"/><text x="12.2726%" y="319.50">libsystem_malloc.dylib`szone_malloc_should_clear</text></g><g><title>libsystem_platform.dylib`_platform_memset (306 samples, 21.64%)</title><rect x="19.3777%" y="293" width="21.6407%" height="15" fill="rgb(235,183,28)" fg:x="274" fg:w="306"/><text x="19.6277%" y="303.50">libsystem_platform.dylib`_platform..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (6 samples, 0.42%)</title><rect x="41.0184%" y="325" width="0.4243%" height="15" fill="rgb(221,5,38)" fg:x="580" fg:w="6"/><text x="41.2684%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.21%)</title><rect x="41.4427%" y="325" width="0.2122%" height="15" fill="rgb(247,18,42)" fg:x="586" fg:w="3"/><text x="41.6927%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.42%)</title><rect x="41.6549%" y="325" width="0.4243%" height="15" fill="rgb(241,131,45)" fg:x="589" fg:w="6"/><text x="41.9049%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.07%)</title><rect x="42.0792%" y="325" width="0.0707%" height="15" fill="rgb(249,31,29)" fg:x="595" fg:w="1"/><text x="42.3292%" y="335.50"></text></g><g><title>engine`engine::moves::precalculate::cache::PrecalculatedCache::create (598 samples, 42.29%)</title><rect x="0.0000%" y="341" width="42.2914%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="598"/><text x="0.2500%" y="351.50">engine`engine::moves::precalculate::cache::PrecalculatedCache::create</text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (2 samples, 0.14%)</title><rect x="42.1499%" y="325" width="0.1414%" height="15" fill="rgb(238,160,17)" fg:x="596" fg:w="2"/><text x="42.3999%" y="335.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="42.2914%" y="277" width="0.0707%" height="15" fill="rgb(214,148,48)" fg:x="598" fg:w="1"/><text x="42.5414%" y="287.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (1 samples, 0.07%)</title><rect x="42.2914%" y="261" width="0.0707%" height="15" fill="rgb(232,36,49)" fg:x="598" fg:w="1"/><text x="42.5414%" y="271.50"></text></g><g><title>engine`engine::evaluation::moves::score_moves (2 samples, 0.14%)</title><rect x="42.4328%" y="261" width="0.1414%" height="15" fill="rgb(209,103,24)" fg:x="600" fg:w="2"/><text x="42.6828%" y="271.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (2 samples, 0.14%)</title><rect x="42.5743%" y="261" width="0.1414%" height="15" fill="rgb(229,88,8)" fg:x="602" fg:w="2"/><text x="42.8243%" y="271.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="42.6450%" y="245" width="0.0707%" height="15" fill="rgb(213,181,19)" fg:x="603" fg:w="1"/><text x="42.8950%" y="255.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="42.9986%" y="245" width="0.0707%" height="15" fill="rgb(254,191,54)" fg:x="608" fg:w="1"/><text x="43.2486%" y="255.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="42.9986%" y="229" width="0.0707%" height="15" fill="rgb(241,83,37)" fg:x="608" fg:w="1"/><text x="43.2486%" y="239.50"></text></g><g><title>engine`engine::evaluation::moves::score_moves (2 samples, 0.14%)</title><rect x="43.9180%" y="229" width="0.1414%" height="15" fill="rgb(233,36,39)" fg:x="621" fg:w="2"/><text x="44.1680%" y="239.50"></text></g><g><title>engine`engine::moves::pseudolegal::king::generate_king_moves (1 samples, 0.07%)</title><rect x="44.0594%" y="213" width="0.0707%" height="15" fill="rgb(226,3,54)" fg:x="623" fg:w="1"/><text x="44.3094%" y="223.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (6 samples, 0.42%)</title><rect x="44.0594%" y="229" width="0.4243%" height="15" fill="rgb(245,192,40)" fg:x="623" fg:w="6"/><text x="44.3094%" y="239.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (5 samples, 0.35%)</title><rect x="44.1301%" y="213" width="0.3536%" height="15" fill="rgb(238,167,29)" fg:x="624" fg:w="5"/><text x="44.3801%" y="223.50"></text></g><g><title>engine`engine::evaluation::moves::score_moves (4 samples, 0.28%)</title><rect x="47.0297%" y="213" width="0.2829%" height="15" fill="rgb(232,182,51)" fg:x="665" fg:w="4"/><text x="47.2797%" y="223.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (2 samples, 0.14%)</title><rect x="47.3126%" y="213" width="0.1414%" height="15" fill="rgb(231,60,39)" fg:x="669" fg:w="2"/><text x="47.5626%" y="223.50"></text></g><g><title>engine`engine::moves::pseudolegal::king::generate_king_moves (1 samples, 0.07%)</title><rect x="47.7369%" y="197" width="0.0707%" height="15" fill="rgb(208,69,12)" fg:x="675" fg:w="1"/><text x="47.9869%" y="207.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (10 samples, 0.71%)</title><rect x="47.4540%" y="213" width="0.7072%" height="15" fill="rgb(235,93,37)" fg:x="671" fg:w="10"/><text x="47.7040%" y="223.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (5 samples, 0.35%)</title><rect x="47.8076%" y="197" width="0.3536%" height="15" fill="rgb(213,116,39)" fg:x="676" fg:w="5"/><text x="48.0576%" y="207.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (2 samples, 0.14%)</title><rect x="48.1612%" y="213" width="0.1414%" height="15" fill="rgb(222,207,29)" fg:x="681" fg:w="2"/><text x="48.4112%" y="223.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (1 samples, 0.07%)</title><rect x="48.2320%" y="197" width="0.0707%" height="15" fill="rgb(206,96,30)" fg:x="682" fg:w="1"/><text x="48.4820%" y="207.50"></text></g><g><title>engine`engine::evaluation::moves::score_moves (2 samples, 0.14%)</title><rect x="52.1216%" y="197" width="0.1414%" height="15" fill="rgb(218,138,4)" fg:x="737" fg:w="2"/><text x="52.3716%" y="207.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (3 samples, 0.21%)</title><rect x="52.2631%" y="197" width="0.2122%" height="15" fill="rgb(250,191,14)" fg:x="739" fg:w="3"/><text x="52.5131%" y="207.50"></text></g><g><title>engine`engine::moves::pseudolegal::king::generate_king_moves (1 samples, 0.07%)</title><rect x="53.0410%" y="181" width="0.0707%" height="15" fill="rgb(239,60,40)" fg:x="750" fg:w="1"/><text x="53.2910%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (2 samples, 0.14%)</title><rect x="53.1117%" y="181" width="0.1414%" height="15" fill="rgb(206,27,48)" fg:x="751" fg:w="2"/><text x="53.3617%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (24 samples, 1.70%)</title><rect x="52.4752%" y="197" width="1.6973%" height="15" fill="rgb(225,35,8)" fg:x="742" fg:w="24"/><text x="52.7252%" y="207.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (13 samples, 0.92%)</title><rect x="53.2532%" y="181" width="0.9194%" height="15" fill="rgb(250,213,24)" fg:x="753" fg:w="13"/><text x="53.5032%" y="191.50"></text></g><g><title>engine`engine::evaluation::moves::score_moves (10 samples, 0.71%)</title><rect x="60.1132%" y="181" width="0.7072%" height="15" fill="rgb(247,123,22)" fg:x="850" fg:w="10"/><text x="60.3632%" y="191.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (5 samples, 0.35%)</title><rect x="60.8204%" y="181" width="0.3536%" height="15" fill="rgb(231,138,38)" fg:x="860" fg:w="5"/><text x="61.0704%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::king::generate_king_moves (1 samples, 0.07%)</title><rect x="61.7397%" y="165" width="0.0707%" height="15" fill="rgb(231,145,46)" fg:x="873" fg:w="1"/><text x="61.9897%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (4 samples, 0.28%)</title><rect x="61.8105%" y="165" width="0.2829%" height="15" fill="rgb(251,118,11)" fg:x="874" fg:w="4"/><text x="62.0605%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (21 samples, 1.49%)</title><rect x="61.1740%" y="181" width="1.4851%" height="15" fill="rgb(217,147,25)" fg:x="865" fg:w="21"/><text x="61.4240%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (8 samples, 0.57%)</title><rect x="62.0934%" y="165" width="0.5658%" height="15" fill="rgb(247,81,37)" fg:x="878" fg:w="8"/><text x="62.3434%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (3 samples, 0.21%)</title><rect x="62.6591%" y="181" width="0.2122%" height="15" fill="rgb(209,12,38)" fg:x="886" fg:w="3"/><text x="62.9091%" y="191.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (2 samples, 0.14%)</title><rect x="62.7298%" y="165" width="0.1414%" height="15" fill="rgb(227,1,9)" fg:x="887" fg:w="2"/><text x="62.9798%" y="175.50"></text></g><g><title>engine`engine::evaluation::moves::score_moves (3 samples, 0.21%)</title><rect x="65.2758%" y="165" width="0.2122%" height="15" fill="rgb(248,47,43)" fg:x="923" fg:w="3"/><text x="65.5258%" y="175.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (4 samples, 0.28%)</title><rect x="65.4880%" y="165" width="0.2829%" height="15" fill="rgb(221,10,30)" fg:x="926" fg:w="4"/><text x="65.7380%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::king::generate_king_moves (3 samples, 0.21%)</title><rect x="66.4781%" y="149" width="0.2122%" height="15" fill="rgb(210,229,1)" fg:x="940" fg:w="3"/><text x="66.7281%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (3 samples, 0.21%)</title><rect x="66.6902%" y="149" width="0.2122%" height="15" fill="rgb(222,148,37)" fg:x="943" fg:w="3"/><text x="66.9402%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (23 samples, 1.63%)</title><rect x="65.7709%" y="165" width="1.6266%" height="15" fill="rgb(234,67,33)" fg:x="930" fg:w="23"/><text x="66.0209%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (7 samples, 0.50%)</title><rect x="66.9024%" y="149" width="0.4950%" height="15" fill="rgb(247,98,35)" fg:x="946" fg:w="7"/><text x="67.1524%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (3 samples, 0.21%)</title><rect x="67.3975%" y="165" width="0.2122%" height="15" fill="rgb(247,138,52)" fg:x="953" fg:w="3"/><text x="67.6475%" y="175.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (1 samples, 0.07%)</title><rect x="67.5389%" y="149" width="0.0707%" height="15" fill="rgb(213,79,30)" fg:x="955" fg:w="1"/><text x="67.7889%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="68.1754%" y="149" width="0.0707%" height="15" fill="rgb(246,177,23)" fg:x="964" fg:w="1"/><text x="68.4254%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="68.1754%" y="133" width="0.0707%" height="15" fill="rgb(230,62,27)" fg:x="964" fg:w="1"/><text x="68.4254%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="68.3168%" y="133" width="0.0707%" height="15" fill="rgb(216,154,8)" fg:x="966" fg:w="1"/><text x="68.5668%" y="143.50"></text></g><g><title>engine`engine::search::negamax::negamax (1 samples, 0.07%)</title><rect x="68.3876%" y="133" width="0.0707%" height="15" fill="rgb(244,35,45)" fg:x="967" fg:w="1"/><text x="68.6376%" y="143.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="68.3876%" y="117" width="0.0707%" height="15" fill="rgb(251,115,12)" fg:x="967" fg:w="1"/><text x="68.6376%" y="127.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="68.3876%" y="101" width="0.0707%" height="15" fill="rgb(240,54,50)" fg:x="967" fg:w="1"/><text x="68.6376%" y="111.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="68.4583%" y="133" width="0.0707%" height="15" fill="rgb(233,84,52)" fg:x="968" fg:w="1"/><text x="68.7083%" y="143.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="68.4583%" y="117" width="0.0707%" height="15" fill="rgb(207,117,47)" fg:x="968" fg:w="1"/><text x="68.7083%" y="127.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="68.4583%" y="101" width="0.0707%" height="15" fill="rgb(249,43,39)" fg:x="968" fg:w="1"/><text x="68.7083%" y="111.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="68.4583%" y="85" width="0.0707%" height="15" fill="rgb(209,38,44)" fg:x="968" fg:w="1"/><text x="68.7083%" y="95.50"></text></g><g><title>engine`engine::search::negamax::negamax (5 samples, 0.35%)</title><rect x="68.2461%" y="149" width="0.3536%" height="15" fill="rgb(236,212,23)" fg:x="965" fg:w="5"/><text x="68.4961%" y="159.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (1 samples, 0.07%)</title><rect x="68.5290%" y="133" width="0.0707%" height="15" fill="rgb(242,79,21)" fg:x="969" fg:w="1"/><text x="68.7790%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (1 samples, 0.07%)</title><rect x="69.3069%" y="117" width="0.0707%" height="15" fill="rgb(211,96,35)" fg:x="980" fg:w="1"/><text x="69.5569%" y="127.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (11 samples, 0.78%)</title><rect x="69.0240%" y="133" width="0.7779%" height="15" fill="rgb(253,215,40)" fg:x="976" fg:w="11"/><text x="69.2740%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (6 samples, 0.42%)</title><rect x="69.3777%" y="117" width="0.4243%" height="15" fill="rgb(211,81,21)" fg:x="981" fg:w="6"/><text x="69.6277%" y="127.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (1 samples, 0.07%)</title><rect x="70.0141%" y="117" width="0.0707%" height="15" fill="rgb(208,190,38)" fg:x="990" fg:w="1"/><text x="70.2641%" y="127.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="70.0849%" y="117" width="0.0707%" height="15" fill="rgb(235,213,38)" fg:x="991" fg:w="1"/><text x="70.3349%" y="127.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="70.0849%" y="101" width="0.0707%" height="15" fill="rgb(237,122,38)" fg:x="991" fg:w="1"/><text x="70.3349%" y="111.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="70.4385%" y="101" width="0.0707%" height="15" fill="rgb(244,218,35)" fg:x="996" fg:w="1"/><text x="70.6885%" y="111.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="70.4385%" y="85" width="0.0707%" height="15" fill="rgb(240,68,47)" fg:x="996" fg:w="1"/><text x="70.6885%" y="95.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (2 samples, 0.14%)</title><rect x="70.6506%" y="85" width="0.1414%" height="15" fill="rgb(210,16,53)" fg:x="999" fg:w="2"/><text x="70.9006%" y="95.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (2 samples, 0.14%)</title><rect x="70.6506%" y="69" width="0.1414%" height="15" fill="rgb(235,124,12)" fg:x="999" fg:w="2"/><text x="70.9006%" y="79.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="70.7921%" y="85" width="0.0707%" height="15" fill="rgb(224,169,11)" fg:x="1001" fg:w="1"/><text x="71.0421%" y="95.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="70.7921%" y="69" width="0.0707%" height="15" fill="rgb(250,166,2)" fg:x="1001" fg:w="1"/><text x="71.0421%" y="79.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (33 samples, 2.33%)</title><rect x="68.5997%" y="149" width="2.3338%" height="15" fill="rgb(242,216,29)" fg:x="970" fg:w="33"/><text x="68.8497%" y="159.50">e..</text></g><g><title>engine`engine::search::quiescence::quiescence (16 samples, 1.13%)</title><rect x="69.8020%" y="133" width="1.1315%" height="15" fill="rgb(230,116,27)" fg:x="987" fg:w="16"/><text x="70.0520%" y="143.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (11 samples, 0.78%)</title><rect x="70.1556%" y="117" width="0.7779%" height="15" fill="rgb(228,99,48)" fg:x="992" fg:w="11"/><text x="70.4056%" y="127.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (6 samples, 0.42%)</title><rect x="70.5092%" y="101" width="0.4243%" height="15" fill="rgb(253,11,6)" fg:x="997" fg:w="6"/><text x="70.7592%" y="111.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (1 samples, 0.07%)</title><rect x="70.8628%" y="85" width="0.0707%" height="15" fill="rgb(247,143,39)" fg:x="1002" fg:w="1"/><text x="71.1128%" y="95.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (3 samples, 0.21%)</title><rect x="70.9335%" y="149" width="0.2122%" height="15" fill="rgb(236,97,10)" fg:x="1003" fg:w="3"/><text x="71.1835%" y="159.50"></text></g><g><title>engine`engine::search::negamax::negamax (51 samples, 3.61%)</title><rect x="67.6096%" y="165" width="3.6068%" height="15" fill="rgb(233,208,19)" fg:x="956" fg:w="51"/><text x="67.8596%" y="175.50">engi..</text></g><g><title>engine`engine::state::game::GameState::unmake_move (1 samples, 0.07%)</title><rect x="71.1457%" y="149" width="0.0707%" height="15" fill="rgb(216,164,2)" fg:x="1006" fg:w="1"/><text x="71.3957%" y="159.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (1 samples, 0.07%)</title><rect x="73.2673%" y="149" width="0.0707%" height="15" fill="rgb(220,129,5)" fg:x="1036" fg:w="1"/><text x="73.5173%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (1 samples, 0.07%)</title><rect x="73.7624%" y="133" width="0.0707%" height="15" fill="rgb(242,17,10)" fg:x="1043" fg:w="1"/><text x="74.0124%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (23 samples, 1.63%)</title><rect x="73.3380%" y="149" width="1.6266%" height="15" fill="rgb(242,107,0)" fg:x="1037" fg:w="23"/><text x="73.5880%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (16 samples, 1.13%)</title><rect x="73.8331%" y="133" width="1.1315%" height="15" fill="rgb(251,28,31)" fg:x="1044" fg:w="16"/><text x="74.0831%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (7 samples, 0.50%)</title><rect x="75.4597%" y="133" width="0.4950%" height="15" fill="rgb(233,223,10)" fg:x="1067" fg:w="7"/><text x="75.7097%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::king::generate_king_moves (1 samples, 0.07%)</title><rect x="75.8840%" y="117" width="0.0707%" height="15" fill="rgb(215,21,27)" fg:x="1073" fg:w="1"/><text x="76.1340%" y="127.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (1 samples, 0.07%)</title><rect x="75.9547%" y="133" width="0.0707%" height="15" fill="rgb(232,23,21)" fg:x="1074" fg:w="1"/><text x="76.2047%" y="143.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (1 samples, 0.07%)</title><rect x="75.9547%" y="117" width="0.0707%" height="15" fill="rgb(244,5,23)" fg:x="1074" fg:w="1"/><text x="76.2047%" y="127.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="76.0255%" y="133" width="0.0707%" height="15" fill="rgb(226,81,46)" fg:x="1075" fg:w="1"/><text x="76.2755%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::king::generate_king_moves (1 samples, 0.07%)</title><rect x="76.8034%" y="101" width="0.0707%" height="15" fill="rgb(247,70,30)" fg:x="1086" fg:w="1"/><text x="77.0534%" y="111.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (3 samples, 0.21%)</title><rect x="76.7327%" y="117" width="0.2122%" height="15" fill="rgb(212,68,19)" fg:x="1085" fg:w="3"/><text x="76.9827%" y="127.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="76.8741%" y="101" width="0.0707%" height="15" fill="rgb(240,187,13)" fg:x="1087" fg:w="1"/><text x="77.1241%" y="111.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (3 samples, 0.21%)</title><rect x="77.1570%" y="101" width="0.2122%" height="15" fill="rgb(223,113,26)" fg:x="1091" fg:w="3"/><text x="77.4070%" y="111.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="77.2984%" y="85" width="0.0707%" height="15" fill="rgb(206,192,2)" fg:x="1093" fg:w="1"/><text x="77.5484%" y="95.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (1 samples, 0.07%)</title><rect x="77.3692%" y="101" width="0.0707%" height="15" fill="rgb(241,108,4)" fg:x="1094" fg:w="1"/><text x="77.6192%" y="111.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="77.7935%" y="53" width="0.0707%" height="15" fill="rgb(247,173,49)" fg:x="1100" fg:w="1"/><text x="78.0435%" y="63.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="77.7935%" y="37" width="0.0707%" height="15" fill="rgb(224,114,35)" fg:x="1100" fg:w="1"/><text x="78.0435%" y="47.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (7 samples, 0.50%)</title><rect x="77.4399%" y="101" width="0.4950%" height="15" fill="rgb(245,159,27)" fg:x="1095" fg:w="7"/><text x="77.6899%" y="111.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (5 samples, 0.35%)</title><rect x="77.5813%" y="85" width="0.3536%" height="15" fill="rgb(245,172,44)" fg:x="1097" fg:w="5"/><text x="77.8313%" y="95.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (2 samples, 0.14%)</title><rect x="77.7935%" y="69" width="0.1414%" height="15" fill="rgb(236,23,11)" fg:x="1100" fg:w="2"/><text x="78.0435%" y="79.50"></text></g><g><title>engine`engine::state::game::GameState::unmake_move (1 samples, 0.07%)</title><rect x="77.8642%" y="53" width="0.0707%" height="15" fill="rgb(205,117,38)" fg:x="1101" fg:w="1"/><text x="78.1142%" y="63.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (15 samples, 1.06%)</title><rect x="76.9448%" y="117" width="1.0608%" height="15" fill="rgb(237,72,25)" fg:x="1088" fg:w="15"/><text x="77.1948%" y="127.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (1 samples, 0.07%)</title><rect x="77.9349%" y="101" width="0.0707%" height="15" fill="rgb(244,70,9)" fg:x="1102" fg:w="1"/><text x="78.1849%" y="111.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (28 samples, 1.98%)</title><rect x="76.0962%" y="133" width="1.9802%" height="15" fill="rgb(217,125,39)" fg:x="1076" fg:w="28"/><text x="76.3462%" y="143.50">e..</text></g><g><title>engine`engine::state::game::GameState::make_move (1 samples, 0.07%)</title><rect x="78.0057%" y="117" width="0.0707%" height="15" fill="rgb(235,36,10)" fg:x="1103" fg:w="1"/><text x="78.2557%" y="127.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (47 samples, 3.32%)</title><rect x="74.9646%" y="149" width="3.3239%" height="15" fill="rgb(251,123,47)" fg:x="1060" fg:w="47"/><text x="75.2146%" y="159.50">eng..</text></g><g><title>engine`engine::state::game::GameState::unmake_move (3 samples, 0.21%)</title><rect x="78.0764%" y="133" width="0.2122%" height="15" fill="rgb(221,13,13)" fg:x="1104" fg:w="3"/><text x="78.3264%" y="143.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (2 samples, 0.14%)</title><rect x="78.2885%" y="149" width="0.1414%" height="15" fill="rgb(238,131,9)" fg:x="1107" fg:w="2"/><text x="78.5385%" y="159.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (104 samples, 7.36%)</title><rect x="71.2164%" y="165" width="7.3550%" height="15" fill="rgb(211,50,8)" fg:x="1007" fg:w="104"/><text x="71.4664%" y="175.50">engine`eng..</text></g><g><title>engine`engine::state::game::GameState::unmake_move (2 samples, 0.14%)</title><rect x="78.4300%" y="149" width="0.1414%" height="15" fill="rgb(245,182,24)" fg:x="1109" fg:w="2"/><text x="78.6800%" y="159.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (9 samples, 0.64%)</title><rect x="78.5714%" y="165" width="0.6365%" height="15" fill="rgb(242,14,37)" fg:x="1111" fg:w="9"/><text x="78.8214%" y="175.50"></text></g><g><title>engine`engine::search::negamax::negamax (236 samples, 16.69%)</title><rect x="62.8713%" y="181" width="16.6902%" height="15" fill="rgb(246,228,12)" fg:x="889" fg:w="236"/><text x="63.1213%" y="191.50">engine`engine::search::neg..</text></g><g><title>engine`engine::state::game::GameState::unmake_move (5 samples, 0.35%)</title><rect x="79.2079%" y="165" width="0.3536%" height="15" fill="rgb(213,55,15)" fg:x="1120" fg:w="5"/><text x="79.4579%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (5 samples, 0.35%)</title><rect x="80.9760%" y="149" width="0.3536%" height="15" fill="rgb(209,9,3)" fg:x="1145" fg:w="5"/><text x="81.2260%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (17 samples, 1.20%)</title><rect x="80.9760%" y="165" width="1.2023%" height="15" fill="rgb(230,59,30)" fg:x="1145" fg:w="17"/><text x="81.2260%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (12 samples, 0.85%)</title><rect x="81.3296%" y="149" width="0.8487%" height="15" fill="rgb(209,121,21)" fg:x="1150" fg:w="12"/><text x="81.5796%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (2 samples, 0.14%)</title><rect x="82.1782%" y="165" width="0.1414%" height="15" fill="rgb(220,109,13)" fg:x="1162" fg:w="2"/><text x="82.4282%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (3 samples, 0.21%)</title><rect x="82.9562%" y="133" width="0.2122%" height="15" fill="rgb(232,18,1)" fg:x="1173" fg:w="3"/><text x="83.2062%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (6 samples, 0.42%)</title><rect x="82.9562%" y="149" width="0.4243%" height="15" fill="rgb(215,41,42)" fg:x="1173" fg:w="6"/><text x="83.2062%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (3 samples, 0.21%)</title><rect x="83.1683%" y="133" width="0.2122%" height="15" fill="rgb(224,123,36)" fg:x="1176" fg:w="3"/><text x="83.4183%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (5 samples, 0.35%)</title><rect x="83.8755%" y="133" width="0.3536%" height="15" fill="rgb(240,125,3)" fg:x="1186" fg:w="5"/><text x="84.1255%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="84.1584%" y="117" width="0.0707%" height="15" fill="rgb(205,98,50)" fg:x="1190" fg:w="1"/><text x="84.4084%" y="127.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="84.2999%" y="117" width="0.0707%" height="15" fill="rgb(205,185,37)" fg:x="1192" fg:w="1"/><text x="84.5499%" y="127.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="84.4413%" y="101" width="0.0707%" height="15" fill="rgb(238,207,15)" fg:x="1194" fg:w="1"/><text x="84.6913%" y="111.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (17 samples, 1.20%)</title><rect x="83.3805%" y="149" width="1.2023%" height="15" fill="rgb(213,199,42)" fg:x="1179" fg:w="17"/><text x="83.6305%" y="159.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (5 samples, 0.35%)</title><rect x="84.2291%" y="133" width="0.3536%" height="15" fill="rgb(235,201,11)" fg:x="1191" fg:w="5"/><text x="84.4791%" y="143.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (3 samples, 0.21%)</title><rect x="84.3706%" y="117" width="0.2122%" height="15" fill="rgb(207,46,11)" fg:x="1193" fg:w="3"/><text x="84.6206%" y="127.50"></text></g><g><title>engine`engine::state::game::GameState::unmake_move (1 samples, 0.07%)</title><rect x="84.5120%" y="101" width="0.0707%" height="15" fill="rgb(241,35,35)" fg:x="1195" fg:w="1"/><text x="84.7620%" y="111.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (3 samples, 0.21%)</title><rect x="84.5827%" y="149" width="0.2122%" height="15" fill="rgb(243,32,47)" fg:x="1196" fg:w="3"/><text x="84.8327%" y="159.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (36 samples, 2.55%)</title><rect x="82.3197%" y="165" width="2.5460%" height="15" fill="rgb(247,202,23)" fg:x="1164" fg:w="36"/><text x="82.5697%" y="175.50">en..</text></g><g><title>engine`engine::state::game::GameState::unmake_move (1 samples, 0.07%)</title><rect x="84.7949%" y="149" width="0.0707%" height="15" fill="rgb(219,102,11)" fg:x="1199" fg:w="1"/><text x="85.0449%" y="159.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (2 samples, 0.14%)</title><rect x="84.8656%" y="165" width="0.1414%" height="15" fill="rgb(243,110,44)" fg:x="1200" fg:w="2"/><text x="85.1156%" y="175.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (78 samples, 5.52%)</title><rect x="79.5615%" y="181" width="5.5163%" height="15" fill="rgb(222,74,54)" fg:x="1125" fg:w="78"/><text x="79.8115%" y="191.50">engine`..</text></g><g><title>engine`engine::state::game::GameState::unmake_move (1 samples, 0.07%)</title><rect x="85.0071%" y="165" width="0.0707%" height="15" fill="rgb(216,99,12)" fg:x="1202" fg:w="1"/><text x="85.2571%" y="175.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (33 samples, 2.33%)</title><rect x="85.0778%" y="181" width="2.3338%" height="15" fill="rgb(226,22,26)" fg:x="1203" fg:w="33"/><text x="85.3278%" y="191.50">e..</text></g><g><title>engine`engine::search::negamax::negamax (484 samples, 34.23%)</title><rect x="54.1726%" y="197" width="34.2291%" height="15" fill="rgb(217,163,10)" fg:x="766" fg:w="484"/><text x="54.4226%" y="207.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::state::game::GameState::unmake_move (14 samples, 0.99%)</title><rect x="87.4116%" y="181" width="0.9901%" height="15" fill="rgb(213,25,53)" fg:x="1236" fg:w="14"/><text x="87.6616%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (8 samples, 0.57%)</title><rect x="89.0382%" y="181" width="0.5658%" height="15" fill="rgb(252,105,26)" fg:x="1259" fg:w="8"/><text x="89.2882%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (8 samples, 0.57%)</title><rect x="89.0382%" y="165" width="0.5658%" height="15" fill="rgb(220,39,43)" fg:x="1259" fg:w="8"/><text x="89.2882%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (1 samples, 0.07%)</title><rect x="89.6040%" y="181" width="0.0707%" height="15" fill="rgb(229,68,48)" fg:x="1267" fg:w="1"/><text x="89.8540%" y="191.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (1 samples, 0.07%)</title><rect x="89.6040%" y="165" width="0.0707%" height="15" fill="rgb(252,8,32)" fg:x="1267" fg:w="1"/><text x="89.8540%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (1 samples, 0.07%)</title><rect x="90.1697%" y="149" width="0.0707%" height="15" fill="rgb(223,20,43)" fg:x="1275" fg:w="1"/><text x="90.4197%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (3 samples, 0.21%)</title><rect x="90.0990%" y="165" width="0.2122%" height="15" fill="rgb(229,81,49)" fg:x="1274" fg:w="3"/><text x="90.3490%" y="175.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (1 samples, 0.07%)</title><rect x="90.2405%" y="149" width="0.0707%" height="15" fill="rgb(236,28,36)" fg:x="1276" fg:w="1"/><text x="90.4905%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (1 samples, 0.07%)</title><rect x="90.3112%" y="165" width="0.0707%" height="15" fill="rgb(249,185,26)" fg:x="1277" fg:w="1"/><text x="90.5612%" y="175.50"></text></g><g><title>engine`engine::moves::attacked::square_attacked::is_square_attacked (1 samples, 0.07%)</title><rect x="90.3112%" y="149" width="0.0707%" height="15" fill="rgb(249,174,33)" fg:x="1277" fg:w="1"/><text x="90.5612%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (2 samples, 0.14%)</title><rect x="90.7355%" y="149" width="0.1414%" height="15" fill="rgb(233,201,37)" fg:x="1283" fg:w="2"/><text x="90.9855%" y="159.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (2 samples, 0.14%)</title><rect x="90.7355%" y="133" width="0.1414%" height="15" fill="rgb(221,78,26)" fg:x="1283" fg:w="2"/><text x="90.9855%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="91.1598%" y="133" width="0.0707%" height="15" fill="rgb(250,127,30)" fg:x="1289" fg:w="1"/><text x="91.4098%" y="143.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="91.2306%" y="117" width="0.0707%" height="15" fill="rgb(230,49,44)" fg:x="1290" fg:w="1"/><text x="91.4806%" y="127.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (15 samples, 1.06%)</title><rect x="90.3819%" y="165" width="1.0608%" height="15" fill="rgb(229,67,23)" fg:x="1278" fg:w="15"/><text x="90.6319%" y="175.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (8 samples, 0.57%)</title><rect x="90.8769%" y="149" width="0.5658%" height="15" fill="rgb(249,83,47)" fg:x="1285" fg:w="8"/><text x="91.1269%" y="159.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (3 samples, 0.21%)</title><rect x="91.2306%" y="133" width="0.2122%" height="15" fill="rgb(215,43,3)" fg:x="1290" fg:w="3"/><text x="91.4806%" y="143.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (2 samples, 0.14%)</title><rect x="91.3013%" y="117" width="0.1414%" height="15" fill="rgb(238,154,13)" fg:x="1291" fg:w="2"/><text x="91.5513%" y="127.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="91.3720%" y="101" width="0.0707%" height="15" fill="rgb(219,56,2)" fg:x="1292" fg:w="1"/><text x="91.6220%" y="111.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (1 samples, 0.07%)</title><rect x="91.4427%" y="165" width="0.0707%" height="15" fill="rgb(233,0,4)" fg:x="1293" fg:w="1"/><text x="91.6927%" y="175.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (27 samples, 1.91%)</title><rect x="89.6747%" y="181" width="1.9095%" height="15" fill="rgb(235,30,7)" fg:x="1268" fg:w="27"/><text x="89.9247%" y="191.50">e..</text></g><g><title>engine`engine::state::game::GameState::unmake_move (1 samples, 0.07%)</title><rect x="91.5134%" y="165" width="0.0707%" height="15" fill="rgb(250,79,13)" fg:x="1294" fg:w="1"/><text x="91.7634%" y="175.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (46 samples, 3.25%)</title><rect x="88.4017%" y="197" width="3.2532%" height="15" fill="rgb(211,146,34)" fg:x="1250" fg:w="46"/><text x="88.6517%" y="207.50">eng..</text></g><g><title>engine`engine::state::game::GameState::unmake_move (1 samples, 0.07%)</title><rect x="91.5842%" y="181" width="0.0707%" height="15" fill="rgb(228,22,38)" fg:x="1295" fg:w="1"/><text x="91.8342%" y="191.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (24 samples, 1.70%)</title><rect x="91.6549%" y="197" width="1.6973%" height="15" fill="rgb(235,168,5)" fg:x="1296" fg:w="24"/><text x="91.9049%" y="207.50"></text></g><g><title>engine`engine::search::negamax::negamax (653 samples, 46.18%)</title><rect x="48.3027%" y="213" width="46.1810%" height="15" fill="rgb(221,155,16)" fg:x="683" fg:w="653"/><text x="48.5527%" y="223.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::state::game::GameState::unmake_move (16 samples, 1.13%)</title><rect x="93.3522%" y="197" width="1.1315%" height="15" fill="rgb(215,215,53)" fg:x="1320" fg:w="16"/><text x="93.6022%" y="207.50"></text></g><g><title>engine`engine::moves::pseudolegal::king::generate_king_moves (1 samples, 0.07%)</title><rect x="94.6959%" y="181" width="0.0707%" height="15" fill="rgb(223,4,10)" fg:x="1339" fg:w="1"/><text x="94.9459%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (4 samples, 0.28%)</title><rect x="94.6959%" y="197" width="0.2829%" height="15" fill="rgb(234,103,6)" fg:x="1339" fg:w="4"/><text x="94.9459%" y="207.50"></text></g><g><title>engine`engine::moves::pseudolegal::pawn::generate_pawn_moves (3 samples, 0.21%)</title><rect x="94.7666%" y="181" width="0.2122%" height="15" fill="rgb(227,97,0)" fg:x="1340" fg:w="3"/><text x="95.0166%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::castling::generate_castling_moves (1 samples, 0.07%)</title><rect x="94.9788%" y="197" width="0.0707%" height="15" fill="rgb(234,150,53)" fg:x="1343" fg:w="1"/><text x="95.2288%" y="207.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (9 samples, 0.64%)</title><rect x="94.4837%" y="213" width="0.6365%" height="15" fill="rgb(228,201,54)" fg:x="1336" fg:w="9"/><text x="94.7337%" y="223.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="95.0495%" y="197" width="0.0707%" height="15" fill="rgb(222,22,37)" fg:x="1344" fg:w="1"/><text x="95.2995%" y="207.50"></text></g><g><title>engine`engine::moves::pseudolegal::all::generate_pseudolegal_moves (1 samples, 0.07%)</title><rect x="95.0495%" y="181" width="0.0707%" height="15" fill="rgb(237,53,32)" fg:x="1344" fg:w="1"/><text x="95.2995%" y="191.50"></text></g><g><title>engine`engine::moves::pseudolegal::knight::generate_knight_moves (1 samples, 0.07%)</title><rect x="95.0495%" y="165" width="0.0707%" height="15" fill="rgb(233,25,53)" fg:x="1344" fg:w="1"/><text x="95.2995%" y="175.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (13 samples, 0.92%)</title><rect x="95.1202%" y="213" width="0.9194%" height="15" fill="rgb(210,40,34)" fg:x="1345" fg:w="13"/><text x="95.3702%" y="223.50"></text></g><g><title>engine`engine::search::negamax::negamax (733 samples, 51.84%)</title><rect x="44.4837%" y="229" width="51.8388%" height="15" fill="rgb(241,220,44)" fg:x="629" fg:w="733"/><text x="44.7337%" y="239.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::state::game::GameState::unmake_move (4 samples, 0.28%)</title><rect x="96.0396%" y="213" width="0.2829%" height="15" fill="rgb(235,28,35)" fg:x="1358" fg:w="4"/><text x="96.2896%" y="223.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (2 samples, 0.14%)</title><rect x="96.3225%" y="229" width="0.1414%" height="15" fill="rgb(210,56,17)" fg:x="1362" fg:w="2"/><text x="96.5725%" y="239.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="96.3932%" y="213" width="0.0707%" height="15" fill="rgb(224,130,29)" fg:x="1363" fg:w="1"/><text x="96.6432%" y="223.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (6 samples, 0.42%)</title><rect x="96.4639%" y="229" width="0.4243%" height="15" fill="rgb(235,212,8)" fg:x="1364" fg:w="6"/><text x="96.7139%" y="239.50"></text></g><g><title>engine`engine::search::negamax::negamax (763 samples, 53.96%)</title><rect x="43.0693%" y="245" width="53.9604%" height="15" fill="rgb(223,33,50)" fg:x="609" fg:w="763"/><text x="43.3193%" y="255.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::state::game::GameState::unmake_move (2 samples, 0.14%)</title><rect x="96.8883%" y="229" width="0.1414%" height="15" fill="rgb(219,149,13)" fg:x="1370" fg:w="2"/><text x="97.1383%" y="239.50"></text></g><g><title>engine`engine::search::quiescence::quiescence (1 samples, 0.07%)</title><rect x="97.0297%" y="245" width="0.0707%" height="15" fill="rgb(250,156,29)" fg:x="1372" fg:w="1"/><text x="97.2797%" y="255.50"></text></g><g><title>engine`engine::state::game::GameState::make_move (4 samples, 0.28%)</title><rect x="97.1004%" y="245" width="0.2829%" height="15" fill="rgb(216,193,19)" fg:x="1373" fg:w="4"/><text x="97.3504%" y="255.50"></text></g><g><title>engine`engine::search::negamax::negamax (774 samples, 54.74%)</title><rect x="42.7157%" y="261" width="54.7383%" height="15" fill="rgb(216,135,14)" fg:x="604" fg:w="774"/><text x="42.9657%" y="271.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::state::game::GameState::unmake_move (1 samples, 0.07%)</title><rect x="97.3833%" y="245" width="0.0707%" height="15" fill="rgb(241,47,5)" fg:x="1377" fg:w="1"/><text x="97.6333%" y="255.50"></text></g><g><title>engine`engine::search::think::iterative_deepening (782 samples, 55.30%)</title><rect x="42.2914%" y="341" width="55.3041%" height="15" fill="rgb(233,42,35)" fg:x="598" fg:w="782"/><text x="42.5414%" y="351.50">engine`engine::search::think::iterative_deepening</text></g><g><title>engine`engine::search::negamax::negamax (782 samples, 55.30%)</title><rect x="42.2914%" y="325" width="55.3041%" height="15" fill="rgb(231,13,6)" fg:x="598" fg:w="782"/><text x="42.5414%" y="335.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::search::negamax::negamax (782 samples, 55.30%)</title><rect x="42.2914%" y="309" width="55.3041%" height="15" fill="rgb(207,181,40)" fg:x="598" fg:w="782"/><text x="42.5414%" y="319.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::search::negamax::negamax (782 samples, 55.30%)</title><rect x="42.2914%" y="293" width="55.3041%" height="15" fill="rgb(254,173,49)" fg:x="598" fg:w="782"/><text x="42.5414%" y="303.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::search::negamax::negamax (781 samples, 55.23%)</title><rect x="42.3621%" y="277" width="55.2334%" height="15" fill="rgb(221,1,38)" fg:x="599" fg:w="781"/><text x="42.6121%" y="287.50">engine`engine::search::negamax::negamax</text></g><g><title>engine`engine::state::game::GameState::make_move (2 samples, 0.14%)</title><rect x="97.4540%" y="261" width="0.1414%" height="15" fill="rgb(206,124,46)" fg:x="1378" fg:w="2"/><text x="97.7040%" y="271.50"></text></g><g><title>engine`std::rt::lang_start::_{{closure}} (1,413 samples, 99.93%)</title><rect x="0.0000%" y="389" width="99.9293%" height="15" fill="rgb(249,21,11)" fg:x="0" fg:w="1413"/><text x="0.2500%" y="399.50">engine`std::rt::lang_start::_{{closure}}</text></g><g><title>engine`std::sys_common::backtrace::__rust_begin_short_backtrace (1,413 samples, 99.93%)</title><rect x="0.0000%" y="373" width="99.9293%" height="15" fill="rgb(222,201,40)" fg:x="0" fg:w="1413"/><text x="0.2500%" y="383.50">engine`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>engine`engine::main (1,413 samples, 99.93%)</title><rect x="0.0000%" y="357" width="99.9293%" height="15" fill="rgb(235,61,29)" fg:x="0" fg:w="1413"/><text x="0.2500%" y="367.50">engine`engine::main</text></g><g><title>engine`engine::search::transposition::TTable::init (33 samples, 2.33%)</title><rect x="97.5955%" y="341" width="2.3338%" height="15" fill="rgb(219,207,3)" fg:x="1380" fg:w="33"/><text x="97.8455%" y="351.50">e..</text></g><g><title>all (1,414 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(222,56,46)" fg:x="0" fg:w="1414"/><text x="0.2500%" y="479.50"></text></g><g><title>dyld`start (1,414 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(239,76,54)" fg:x="0" fg:w="1414"/><text x="0.2500%" y="463.50">dyld`start</text></g><g><title>engine`main (1,414 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(231,124,27)" fg:x="0" fg:w="1414"/><text x="0.2500%" y="447.50">engine`main</text></g><g><title>engine`std::rt::lang_start (1,414 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(249,195,6)" fg:x="0" fg:w="1414"/><text x="0.2500%" y="431.50">engine`std::rt::lang_start</text></g><g><title>engine`std::rt::lang_start_internal (1,414 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="1414"/><text x="0.2500%" y="415.50">engine`std::rt::lang_start_internal</text></g><g><title>libsystem_kernel.dylib`__proc_info (1 samples, 0.07%)</title><rect x="99.9293%" y="389" width="0.0707%" height="15" fill="rgb(206,201,31)" fg:x="1413" fg:w="1"/><text x="100.1793%" y="399.50"></text></g></svg></svg>